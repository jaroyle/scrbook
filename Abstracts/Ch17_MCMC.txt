
The aim of this chapter is to provide you with working knowledge of
how to construct Markov chain Monte Carlo (MCMC) algorithms. This
comes in handy when some of the {\bf BUGS} engines fail or are
inefficient, or when additional flexibility in model specification or
algorithm tuning is needed.  We describe technical background and
concepts related to MCMC sampling, summarization of posterior output,
and specific methods for constructing MCMC algorithms such as Gibbs
sampling, Metropolis-Hastings, and other methods.  We provide specific
examples of developing MCMC samplers in {\bf R} using GLMs and GLMMs,
and then extend these ideas to capture-recapture (model $M_{h}$) and
SCR models.  We provide an SCR example involving when the state-space
is an irregular polygon defined by an ESRI shapefile, which cannot be
used in any of the {\bf BUGS} engines.  Finally, we discuss ideas for
increasing computational speed by using multiple cores simultaneously
using the {\bf R} package \mbox{\tt snowfall}, or integrating C++ code
with {\bf R} using the \mbox{\tt Rcpp} package.


Key words:
C++,
cluster computing, 
Gibbs sampling,
Markov chain Monte Carlo,
Metropolis-Hastings,
Metropolis-within-Gibbs,
parallel computing,
posterior simulation,
rejection sampling,
shape file, 
slice sampling,




