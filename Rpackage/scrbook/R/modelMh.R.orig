modelMh <-
<<<<<<< HEAD
function(y,K,nsim=1000){
=======
function(ytot,K,nsim=1000){
>>>>>>> 6317ce6385330c0e93a759c12318dc9b6a65d758

out<-matrix(NA,nrow=nsim,ncol=4)
dimnames(out)<-list(NULL,c("mu","sigma","psi","N"))
lp<- rnorm(M,-1,1)
p<-plogis(lp)
mu<- -1
p0<-exp(mu)/(1+exp(mu))
sigma<- 1
psi<- .5
z<-rbinom(M,1,psi)
z[ytot>0]<-1

for(i in 1:nsim){

### update the logit(p) parameters
<<<<<<< HEAD
lpc<- rnorm(M,lp,1)  # 0.5 is a tuning parameter
pc<-plogis(lpc)
lik.curr<-log(dbinom(ytot,K,z*p)*dnorm(lp,mu,sigma))
lik.cand<-log(dbinom(ytot,K,z*pc)*dnorm(lpc,mu,sigma))
kp<- runif(M) < exp(lik.cand-lik.curr)
p[kp]<-pc[kp]
lp[kp]<-lpc[kp]

if(1==1){
p0c<- rnorm(1,p0,.05)
if(p0c>0 & p0c<1){
muc<-log(p0c/(1-p0c))
lik.curr<-sum(dnorm(lp,mu,sigma,log=TRUE))
lik.cand<-sum(dnorm(lp,muc,sigma,log=TRUE))
if(runif(1)<exp(lik.cand-lik.curr)) {
 mu<-muc
 p0<-p0c
}
}
}

if(1==2){
muc<- rnorm(1,mu,.5)
lik.curr<-sum(dnorm(lp,mu,sigma,log=TRUE))
lik.cand<-sum(dnorm(lp,muc,sigma,log=TRUE))
if(runif(1)<exp(lik.cand-lik.curr)) {
 mu<-muc
 p0<-exp(muc)/(1+exp(muc))
}
}

sigmac<-rnorm(1,sigma,.5)
if(sigmac>0){
lik.curr<-sum(dnorm(lp,mu,sigma,log=TRUE))
lik.cand<-sum(dnorm(lp,mu,sigmac,log=TRUE))
if(runif(1)<exp(lik.cand-lik.curr))
 sigma<-sigmac
=======
lp.cand<- rnorm(M,lp,1)  # 1 is a tuning parameter
p.cand<-plogis(lp.cand)
ll<-dbinom(ytot,K,z*p, log=T)
prior<-dnorm(lp,mu,sigma, log=T)
llcand<-dbinom(ytot,K,z*p.cand, log=T)
prior.cand<-dnorm(lp.cand,mu,sigma, log=T)

kp<- runif(M) < exp((llcand+prior.cand)-(ll+prior))
p[kp]<-p.cand[kp]
lp[kp]<-lp.cand[kp]

p0.cand<- rnorm(1,p0,.05)
if(p0.cand>0 & p0.cand<1){
mu.cand<-log(p0.cand/(1-p0.cand))
ll<-sum(dnorm(lp,mu,sigma,log=TRUE))
llcand<-sum(dnorm(lp,mu.cand,sigma,log=TRUE))
if(runif(1)<exp(llcand-ll)) {
 mu<-mu.cand
 p0<-p0.cand
}
}

sigma.cand<-rnorm(1,sigma,.5)
if(sigma.cand>0){
ll<-sum(dnorm(lp,mu,sigma,log=TRUE))
llcand<-sum(dnorm(lp,mu,sigma.cand,log=TRUE))
if(runif(1)<exp(llcand-ll))
 sigma<-sigma.cand
>>>>>>> 6317ce6385330c0e93a759c12318dc9b6a65d758
}


### update the z[i] variables
<<<<<<< HEAD
zc<-  ifelse(z==1,0,1)  # candidate is 0 if current = 1, etc..
lik.curr<- dbinom(ytot,K,z*p)*dbinom(z,1,psi)
lik.cand<- dbinom(ytot,K,zc*p)*dbinom(zc,1,psi)
kp<- runif(M) <  (lik.cand/lik.curr)
z[kp]<- zc[kp]
=======
z.cand<-  ifelse(z==1,0,1)  # candidate is 0 if current = 1, etc..
ll<- dbinom(ytot,K,z*p, log=TRUE)
prior<-dbinom(z,1,psi, log=TRUE)
llcand<- dbinom(ytot,K,z.cand*p, log=TRUE)
prior.cand<-dbinom(z.cand,1,psi, log=TRUE)
kp<- runif(M) <  exp((llcand+prior.cand)-(ll+prior))
z[kp]<- z.cand[kp]
>>>>>>> 6317ce6385330c0e93a759c12318dc9b6a65d758

psi<-rbeta(1, sum(z) + 1, M-sum(z) + 1)

out[i,]<- c(mu,sigma,psi,sum(z))

}

return(out)

<<<<<<< HEAD
}
=======
}
>>>>>>> 6317ce6385330c0e93a759c12318dc9b6a65d758
