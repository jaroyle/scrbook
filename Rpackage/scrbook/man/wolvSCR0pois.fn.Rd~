\name{wolvSCR0pois.fn}
\alias{wolvSCR0pois.fn}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
%%  ~~function to do ... ~~
}
\description{
%%  ~~ A concise (1-5 lines) description of what the function does. ~~
}
\usage{
wolvSCR0pois.fn(y3d, traps, nb = 1000, ni = 2000, delta = 2, M = 200)
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{y3d}{
%%     ~~Describe \code{y3d} here~~
}
  \item{traps}{
%%     ~~Describe \code{traps} here~~
}
  \item{nb}{
%%     ~~Describe \code{nb} here~~
}
  \item{ni}{
%%     ~~Describe \code{ni} here~~
}
  \item{delta}{
%%     ~~Describe \code{delta} here~~
}
  \item{M}{
%%     ~~Describe \code{M} here~~
}
}
\details{
%%  ~~ If necessary, more details than the description above ~~
}
\value{
%%  ~Describe the value returned
%%  If it is a LIST, use
%%  \item{comp1 }{Description of 'comp1'}
%%  \item{comp2 }{Description of 'comp2'}
%% ...
}
\references{
%% ~put references to the literature/web site here ~
}
\author{
%%  ~~who you are~~
}
\note{
%%  ~~further notes~~
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
%% ~~objects to See Also as \code{\link{help}}, ~~~
}
\examples{
##---- Should be DIRECTLY executable !! ----
##-- ==>  Define data, use random,
##--	or do  help(data=index)  for the standard data sets.

## The function is currently defined as
function (y3d, traps, nb = 1000, ni = 2000, delta = 2, M = 200) 
{
    library("R2WinBUGS")
    traplocs <- as.matrix(traps[, 1:2])
    mingridx <- min(traplocs[, 1])
    mingridy <- min(traplocs[, 2])
    traplocs[, 1] <- traplocs[, 1] - min(traplocs[, 1])
    traplocs[, 2] <- traplocs[, 2] - min(traplocs[, 2])
    traplocs <- traplocs/10000
    ntraps <- nrow(traplocs)
    Xl <- min(traplocs[, 1] - delta)
    Xu <- max(traplocs[, 1] + delta)
    Yl <- min(traplocs[, 2] - delta)
    Yu <- max(traplocs[, 2] + delta)
    area <- (Xu - Xl) * (Yu - Yl)/10
    plot(traplocs, pch = 20, xlim = c(Xl, Xu), ylim = c(Yl, Yu))
    nz <- M - dim(y3d)[1]
    MASK <- traps[, 3:ncol(traps)]
    Dmat <- as.matrix(dist(traplocs))
    nind <- dim(y3d)[1]
    K <- dim(y3d)[2]
    newy <- array(0, dim = c(nind + nz, K, ntraps))
    for (j in 1:nind) {
        newy[j, 1:K, 1:ntraps] <- y3d[j, 1:K, 1:ntraps]
    }
    y3d <- newy
    M <- nind + nz
    K <- apply(MASK, 1, sum)
    ncaps <- apply(y3d, c(1, 3), sum)
    sink("modelfile.txt")
    cat("\nmodel {\n\n#beta~dnorm(0,.01)\nsigma~dunif(0,50)\n#alpha~dnorm(0,.01)\n#p0<-exp(alpha)/(1+exp(alpha))\np0~dunif(0,1)\n#logit(logitlam0)<-p0\nbeta<- (1/(2*sigma*sigma) )\n#sigma<- sqrt(1/(2*beta))\npsi ~ dunif(0,1)\nfor(i in 1:M){\n w[i]~dbern(psi)\n s[i,1]~dunif(Xl,Xu)\n s[i,2]~dunif(Yl,Yu) \n}\nfor(i in 1:M){\nfor(j in 1:ntraps){\n   mu[i,j]<-K[j]*w[i]*p[i,j]\n ncaps[i,j]~ dpois(mu[i,j]) \n dd[i,j]<- pow(s[i,1] - traplocs[j,1],2)  + pow(s[i,2] - traplocs[j,2],2) \n  p[i,j]  <-  p0*exp( - beta*dd[i,j] )\nncapsnew[i,j]~dpois(mu[i,j])\nerr[i,j]<-  pow(pow(ncaps[i,j],.5) - pow(mu[i,j],.5),2)\nerrnew[i,j]<- pow(pow(ncapsnew[i,j],.5) - pow(mu[i,j],.5),2)\n}\n\n\n}\n#for(j in 1:ntraps){\n#traptotals[j]<-sum(ncapsnew[1:M,j])\n#}\n\nXobs<-sum(err[,])\nXnew<-sum(errnew[,])\n\nN<-sum(w[1:M])\nD<-N/area\n}\n", 
        fill = TRUE)
    sink()
    data <- list("ncaps", "traplocs", "M", "ntraps", "K", "Xl", 
        "Xu", "Yl", "Yu", "area")
    sst <- sample(1:nrow(traplocs), M, replace = TRUE)
    wst <- c(rep(1, nind), rep(0, M - nind))
    inits <- function() {
        list(sigma = runif(1, 0.4, 1), p0 = runif(1, 0.01, 0.2), 
            w = wst)
    }
    parameters <- c("psi", "sigma", "p0", "N", "D", "beta", "Xobs", 
        "Xnew")
    out <- bugs(data, inits, parameters, "modelfile.txt", n.thin = 1, 
        n.chains = 3, n.burnin = nb, n.iter = ni, working.dir = getwd(), 
        debug = FALSE)
    out
  }
}
% Add one or more standard keywords, see file 'KEYWORDS' in the
% R documentation directory.
\keyword{ ~kwd1 }
\keyword{ ~kwd2 }% __ONLY ONE__ keyword per line
